{
    "error": [],
    "warning": [
        {
            "severity": "info",
            "line_from": 58,
            "line_to": 58,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Glue\\CompaniesRestApi\\Processor\\Company\\Reader\\CompanyReader::isResourceIdentifierCurrentUser cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/CompaniesRestApi/src/Spryker/Glue/CompaniesRestApi/Processor/Company/Reader/CompanyReader.php",
            "snippet": "        if ($this->isResourceIdentifierCurrentUser($restRequest->getResource()->getId())) {",
            "selected_text": "$restRequest->getResource()->getId()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 72,
            "line_to": 72,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getIdCompany on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/CompaniesRestApi/src/Spryker/Glue/CompaniesRestApi/Processor/Company/Reader/CompanyReader.php",
            "snippet": "        if (!$restRequest->getRestUser()->getIdCompany()) {",
            "selected_text": "getIdCompany",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 77,
            "line_to": 77,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getIdCompany on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/CompaniesRestApi/src/Spryker/Glue/CompaniesRestApi/Processor/Company/Reader/CompanyReader.php",
            "snippet": "            (new CompanyTransfer())->setIdCompany($restRequest->getRestUser()->getIdCompany())",
            "selected_text": "getIdCompany",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 100,
            "line_to": 100,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Glue\\CompaniesRestApi\\Processor\\Company\\Reader\\CompanyReader::isCurrentCompanyUserInCompany cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/CompaniesRestApi/src/Spryker/Glue/CompaniesRestApi/Processor/Company/Reader/CompanyReader.php",
            "snippet": "            || !$this->isCurrentCompanyUserInCompany($restRequest, $companyResponseTransfer->getCompanyTransfer())",
            "selected_text": "$companyResponseTransfer->getCompanyTransfer()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 105,
            "line_to": 105,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Glue\\CompaniesRestApi\\Processor\\Company\\Reader\\CompanyReader::createResponse cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/CompaniesRestApi/src/Spryker/Glue/CompaniesRestApi/Processor/Company/Reader/CompanyReader.php",
            "snippet": "        return $this->createResponse($companyResponseTransfer->getCompanyTransfer());",
            "selected_text": "$companyResponseTransfer->getCompanyTransfer()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 133,
            "line_to": 133,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Glue\\CompaniesRestApi\\Processor\\Company\\RestResponseBuilder\\CompanyRestResponseBuilderInterface::createCompanyRestResponse cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/CompaniesRestApi/src/Spryker/Glue/CompaniesRestApi/Processor/Company/Reader/CompanyReader.php",
            "snippet": "                $companyTransfer->getUuid(),",
            "selected_text": "$companyTransfer->getUuid()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 149,
            "line_to": 149,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getIdCompany on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/CompaniesRestApi/src/Spryker/Glue/CompaniesRestApi/Processor/Company/Reader/CompanyReader.php",
            "snippet": "            && $restRequest->getRestUser()->getIdCompany()",
            "selected_text": "getIdCompany",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 150,
            "line_to": 150,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getIdCompany on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/CompaniesRestApi/src/Spryker/Glue/CompaniesRestApi/Processor/Company/Reader/CompanyReader.php",
            "snippet": "            && $restRequest->getRestUser()->getIdCompany() === $companyTransfer->getIdCompany();",
            "selected_text": "getIdCompany",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 84,
            "line_to": 84,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Glue\\CompaniesRestApi\\Processor\\Company\\RestResponseBuilder\\CompanyRestResponseBuilderInterface::createCompanyRestResource cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/CompaniesRestApi/src/Spryker/Glue/CompaniesRestApi/Processor/Company/Relationship/AbstractCompanyResourceRelationshipExpander.php",
            "snippet": "            $companyTransfer->getUuid(),",
            "selected_text": "$companyTransfer->getUuid()",
            "error_level": 3,
            "shortcode": 78
        }
    ],
    "deprecation": []
}
